<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use {{ namespacedRequests }}
use Illuminate\Contracts\View\View;
use Illuminate\Http\RedirectResponse;

class {{ class }} extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return View
     */
    public function index(): View
    {
        $title = '';
        $description = '';

        $data = [
            'title'       => $title,
            'description' => $description,
        ];

        return view('.index', $data);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return View
     */
    public function create(): View
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \{{ namespacedStoreRequest }}  $request
     * @return RedirectResponse
     */
    public function store({{ storeRequest }} $request): RedirectResponse
    {
        //
    }

    /**
     * Display the specified resource.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return View
     */
    public function show({{ model }} ${{ modelVariable }}): View
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return View
     */
    public function edit({{ model }} ${{ modelVariable }}): View
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \{{ namespacedUpdateRequest }}  $request
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return RedirectResponse
     */
    public function update({{ updateRequest }} $request, {{ model }} ${{ modelVariable }}): RedirectResponse
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return RedirectResponse
     */
    public function destroy({{ model }} ${{ modelVariable }}): RedirectResponse
    {
        //
    }
}
